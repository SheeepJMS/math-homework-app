"""Add email field and user-class many-to-many relationship

Revision ID: 7159f858bf8a
Revises: af26d9e2684a
Create Date: 2025-04-29 23:13:35.953385

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7159f858bf8a'
down_revision = 'af26d9e2684a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_class_association',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(length=120), nullable=False))
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('name')
        batch_op.drop_column('class_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('class_id', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=80), nullable=False))
        batch_op.create_foreign_key(None, 'class', ['class_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('email')

    op.drop_table('user_class_association')
    # ### end Alembic commands ###
